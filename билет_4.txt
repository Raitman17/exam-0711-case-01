Синхронные протоколы:
Клиент отправляет запрос и ждет ответ
Блокирующее выполнение - следующий запрос отправляется только после получения ответа
Простая модель типа "запрос-ответ"

Асинхронные протоколы:
Клиент может отправлять запросы не дожидаясь ответов на предыдущие
Неблокирующее выполнение с использованием callback'ов или Promise
Поддержка множественных одновременных операций

Установка и поддержание соединения
Timeout - время ожидания ответа
Keep-alive - поддержание постоянного соединения
Ping/Pong - проверка состояния соединения

Передача данных:
Синхронные HTTP: метаданные в заголовках, контент в теле
Асинхронные WebSocket: данные могут передаваться в фреймах без разделения на заголовки/тело

Восстановление соединения:
Синхронные: каждый запрос создает новое соединение или использует pool
Асинхронные: автоматическое переподключение

